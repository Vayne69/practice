<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.practice.security.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.example.practice.security.model.SysUser">
        <!--@mbg.generated-->
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        user_id, username, `password`, salt, `state`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="user_id" keyProperty="userId"
            parameterType="com.example.practice.security.model.SysUser" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_user (username, `password`, salt,
        `state`)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId"
            parameterType="com.example.practice.security.model.SysUser" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="state != null">
                `state`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.practice.security.model.SysUser">
        <!--@mbg.generated-->
        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.practice.security.model.SysUser">
        <!--@mbg.generated-->
        update sys_user
        set username = #{username,jdbcType=VARCHAR},
        `password` = #{password,jdbcType=VARCHAR},
        salt = #{salt,jdbcType=VARCHAR},
        `state` = #{state,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>

    <select id="findByUserName" resultType="com.example.practice.security.model.SysUser">
        select
        <include refid="Base_Column_List"></include>
        from sys_user
        where username=#{username}
    </select>
</mapper>